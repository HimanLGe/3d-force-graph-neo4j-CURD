import { SSE } from './sse.js';

export default class GPTUtil {
    constructor() {

        this._onSSEOpen = (event) => {
            
        }
        this._onSSEMessage = (event) => {
            
        }
        this._onSSEError = (event) => {
            
        }
        this._onSSEClose = (event) => {
            
        }

        this.data = {
            // 模型名称随意填写，如果不希望输出检索过程模型名称请包含silent_search
            "model": "kimi",
            "messages": [
                {
                    "role": "user",
                    "content": ""
                }
            ],
            // 是否开启联网搜索，默认false
            "use_search": true,
            // 如果使用SSE流请设置为true，默认false
            "stream": true
        };

        this.source = new SSE("http://127.0.0.1:8000/v1/chat/completions",
        {
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1c2VyLWNlbnRlciIsImV4cCI6MTcyMTY2MDY1NywiaWF0IjoxNzEzODg0NjU3LCJqdGkiOiJjb2pzcnM5a3FxNGhhdTRqaGE5MCIsInR5cCI6InJlZnJlc2giLCJzdWIiOiJjb2dodWxoa3FxNHR0cms3cTlpZyIsInNwYWNlX2lkIjoiY29naHVsaGtxcTR0dHJrN3E5aTAiLCJhYnN0cmFjdF91c2VyX2lkIjoiY29naHVsaGtxcTR0dHJrN3E5aGcifQ.9BKESFMx2vT3wwKG2i1mvo4tlfBTNxJKMyqzUgr7ILGZ1RhDmZuYWVbscBSN-tuRXj7P4zuESxo_fqHJIPMe-A'
            },
                        payload: JSON.stringify(this.data),
                method: 'POST'
            });
        
                //与后台连接成功触发的监听
        this.source.addEventListener('open', (e) => {
            this._onSSEOpen(e)
            console.log("open")
            console.log('连接成功');
        });
        
        //接收到后台数据触发监听方法
        this.source.addEventListener('message', (e) => {
            this._onSSEMessage(e)
        console.log('收到数据', e);
        });
        
        //请求出错触发的监听方法
        this.source.addEventListener('error', (e) => {
            this._onSSEError(e)
            console.error('请求出错：', e);
        });
        
        //数据传输完成关闭连接触发的监听方法
        this.source.addEventListener('close', (e) => {
            this._onSSEClose(e)
            console.log('连接关闭');
        });
        
    }
  
    setPayload(payload) {
        
        this.source.payload = JSON.stringify(payload)
    }
    
    ask(question) {
        this.data["messages"][0]["content"] = question
        this.setPayload(this.data)
        this.source.stream()
    }

    close() {
        this.source.close()
    }

    setOpenEvent(fun) {
        this._onSSEOpen = fun
    }

    setMessageEvent(fun) {
        this._onSSEMessage = fun
    }

    setErrorEvent(fun) {
        this._onSSEError = fun
    }

    setCloseEvent(fun) {
        this._onSSEClose = fun
    }
  }
  